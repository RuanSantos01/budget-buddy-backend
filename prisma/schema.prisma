generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  email    String  @unique
  password String
  isActive Boolean @default(true)

  categories   Category[]
  transactions Transaction[]
  bankAccounts BankAccount[]

  @@map("users")
}

model BankAccount {
  id         String @id @default(uuid()) @db.Uuid
  userId     String @map("user_id") @db.Uuid
  bankIspbId String @map("bank_ispb_id")
  name       String
  balance    Float  @map("balance")
  createdAt  DateTime

  transactions Transaction[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  bank Bank @relation(fields: [bankIspbId], references: [ispb])

  @@map("bank_accounts")
}

model Bank {
  ispb         String        @id
  name         String
  bankAccounts BankAccount[]
}

enum TransactionType {
  INCOME
  EXPENSE

  @@map("transaction_type")
}

model Category {
  id     String @id @default(uuid()) @db.Uuid
  userId String @map("user_id") @db.Uuid
  name   String
  icon   String

  type         TransactionType
  transactions Transaction[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("categories")
}

model Transaction {
  id            String   @id @default(uuid()) @db.Uuid
  userId        String   @map("user_id") @db.Uuid
  categoryId    String?  @map("category_id") @db.Uuid
  bankAccountId String   @map("bank_account_id") @db.Uuid
  name          String
  value         Float
  createdAt     DateTime

  type TransactionType

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category?   @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  bankAccount BankAccount @relation(fields: [bankAccountId], references: [id], onDelete: Cascade)

  @@map("transactions")
}
